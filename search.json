[{"path":[]},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"introduction","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Introduction","title":"A Brief Introduction to openalexR","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, venues, institutions concepts 4 main functions: oa_query(): generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request(): downloads collection entities matching query created oa_query() manually written user, returns JSON object list format. oa2df(): converts JSON object classical bibliographic tibble/data frame. oa_fetch(): composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df","code":""},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"installation","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Installation","title":"A Brief Introduction to openalexR","text":"can install developer version openalexR GitHub : can install released version openalexR CRAN :","code":"install.packages(\"remotes\") remotes::install_github(\"massimoaria/openalexR\") install.packages(\"openalexR\")"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"package-loading","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Package loading","title":"A Brief Introduction to openalexR","text":"","code":"library(openalexR) library(dplyr)"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"works-think-papers-publications","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Works (think papers, publications)","title":"A Brief Introduction to openalexR","text":"paper: associated OpenAlex-id W2755950973. know paper’s OpenAlex ID, need passing identifier = <openalex id> argument oa_fetch(): oa_fetch() composition functions: oa_query |> oa_request |> oa2df. results, oa_query() returns query string including OpenAlex endpoint API server address (default). oa_request() downloads bibliographic records matching query. Finally, oa2df() converts final result list tibble. final result complicated tibble, can use show_works() display simplified version:","code":"Aria, M., & Cuccurullo, C. (2017). bibliometrix:  An R-tool for comprehensive science mapping analysis.  Journal of informetrics, 11(4), 959-975. paper_id <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   verbose = TRUE ) ## [1] \"https://api.openalex.org/works/W2755950973\" ## Requesting url: https://api.openalex.org/works/W2755950973 dplyr::glimpse(paper_id) ## Rows: 1 ## Columns: 25 ## $ id            <chr> \"https://openalex.org/W2755950973\" ## $ TI            <chr> \"bibliometrix: An R-tool for comprehensive science mappi… ## $ author        <list> [<data.frame[2 x 10]>] ## $ AB            <chr> \"Abstract The use of bibliometrics is gradually extendin… ## $ pubdata       <chr> \"2017-11-01\" ## $ SO            <chr> \"Journal of Informetrics\" ## $ SO_ID         <chr> \"https://openalex.org/V205292342\" ## $ PU            <chr> \"Elsevier\" ## $ IS            <list> <\"1875-5879\", \"1751-1577\"> ## $ URL           <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ first_page    <chr> \"959\" ## $ last_page     <chr> \"975\" ## $ volume        <chr> \"11\" ## $ issue         <chr> \"4\" ## $ OA            <lgl> FALSE ## $ TC            <int> 1486 ## $ TCperYear     <list> [<data.frame[5 x 2]>] ## $ PY            <int> 2017 ## $ cited_by_url  <chr> \"https://api.openalex.org/works?filter=cites:W2755950973\" ## $ ids           <list> [[<data.frame[3 x 2]>]] ## $ DI            <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" ## $ DT            <chr> \"journal-article\" ## $ CR            <list> <\"https://openalex.org/W189804332\", \"https://openalex.o… ## $ related_works <list> <\"https://openalex.org/W150292108\", \"https://openalex.or… ## $ concept       <list> [<data.frame[8 x 5]>] paper_id %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"external-id-formats","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex. > Works (think papers, publications)","what":"External id formats","title":"A Brief Introduction to openalexR","text":"OpenAlex endpoint accepts OpenAlex IDs external IDs (e.g., DOI, ISSN) several formats, including Digital Object Identifier (DOI) Persistent Identifiers (PIDs).","code":"oa_fetch(   # identifier = \"https://doi.org/10.1016/j.joi.2017.08.007\", # would also work (PIDs)   identifier = \"doi:10.1016/j.joi.2017.08.007\",   entity = \"works\" ) %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"more-than-one-publicationsauthors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex. > Works (think papers, publications)","what":"More than one publications/authors","title":"A Brief Introduction to openalexR","text":"https://api.openalex.org/authors/https://orcid.org/ know OpenAlex IDs entities, can also feed identifier argument. However, know external identifies, say, DOIs, need use doi filter (either canonical form https://doi.org/ without work):","code":"oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   # identifier = c(\"https://doi.org/10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1016/j.joi.2017.08.007\"), # TODO   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## [1] \"https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973\" ## Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 ## About to get a total of 1 pages of results with a total of 2 records. oa_fetch(   # identifier = c(\"W2741809807\", \"W2755950973\"),   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() ## [1] \"https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727\" ## Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 ## About to get a total of 1 pages of results with a total of 2 records."},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"filters","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex. > Works (think papers, publications)","what":"Filters","title":"A Brief Introduction to openalexR","text":"cases, interested downloading collection items meet one inclusion/exclusion criteria (filters). Supported attributes endpoints listed . Example: want download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order. Setting argument count_only = TRUE, function oa_request() returns number items matching query without downloading collection. can now download records transform tibble/data frame setting count_only = FALSE (also default value): Read see can shorten two function calls.","code":"oa_fetch(   identifier = NULL,   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   sort = \"cited_by_count:desc\",   endpoint = \"https://api.openalex.org/\",   count_only = TRUE,   verbose = TRUE ) ## [1] \"https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc\" ## Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc ##               count db_response_time_ms                page            per_page  ##                  27                  13                   1                   1 oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   count_only = FALSE ) %>%   show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"authors","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Authors","title":"A Brief Introduction to openalexR","text":"Similarly work, can use identifier pass authors’ OpenAlex ID. Example: want information authors IDs A923435168 A2208157607. Example: want download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published 499 works. Let’s first check many records match query, set count_only = FALSE download entire collection. can first defining list arguments, adding count_only (default FALSE) list: can also filter filters display_name, has_orcid, orcid:","code":"oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) %>%   show_authors() %>%   knitr::kable() ## [1] \"https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607\" ## Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 ## About to get a total of 1 pages of results with a total of 2 records. my_arguments <- list(   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">499\"   )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) ##               count db_response_time_ms                page            per_page  ##                  22                  42                   1                   1 do.call(oa_fetch, my_arguments) %>%    show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   display_name = \"Massimo Aria\",   has_orcid = \"true\" ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   orcid = \"0000-0002-8517-9411\" ) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"institutions","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Institutions","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:","code":"italian_insts <- list(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE )  do.call(oa_fetch, c(italian_insts, list(count_only = TRUE))) ## [1] \"https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation\" ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ##               count db_response_time_ms                page            per_page  ##                 231                   2                   1                   1 dplyr::glimpse(do.call(oa_fetch, italian_insts)) ## [1] \"https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation\" ## Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation ## About to get a total of 2 pages of results with a total of 231 records. ## Rows: 231 ## Columns: 19 ## $ id                 <chr> \"https://openalex.org/I861853513\", \"https://openale… ## $ name               <chr> \"Sapienza University of Rome\", \"University of Bolog… ## $ name_alternatives  <list> \"Università degli Studi di Roma \\\"La Sapienza\\\"\", … ## $ name_acronyms      <list> NA, \"UNIBO\", \"UNIPD\", \"UNIMI\", NA, NA, \"UNITO\", \"U… ## $ name_international <list> [<data.frame[1 x 85]>], [<data.frame[1 x 103]>], [… ## $ ror                <chr> \"https://ror.org/02be6w209\", \"https://ror.org/01111… ## $ ids                <list> [<tbl_df[6 x 2]>], [<tbl_df[6 x 2]>], [<tbl_df[6 x… ## $ country            <chr> \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT… ## $ geo                <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]>], [<da… ## $ type               <chr> \"education\", \"education\", \"education\", \"education\",… ## $ homepage           <chr> \"http://www.uniroma1.it/\", \"http://www.unibo.it/en/… ## $ image              <chr> \"https://upload.wikimedia.org/wikipedia/en/4/45/Sap… ## $ thumbnail          <chr> \"https://upload.wikimedia.org/wikipedia/en/thumb/4/… ## $ associated_inst    <list> [<data.frame[1 x 24]>], [<data.frame[1 x 12]>], [<… ## $ works_count        <int> 163780, 130551, 129081, 127672, 91458, 86833, 85418… ## $ TC                 <int> 10601998, 9660600, 9534411, 9238691, 5998968, 56073… ## $ TCperYear          <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3]>], [<… ## $ concept            <list> [<data.frame[14 x 5]>], [<data.frame[15 x 5]>], [<… ## $ works_api_url      <chr> \"https://api.openalex.org/works?filter=institutions…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"venues-think-journals","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Venues (think journals)","title":"A Brief Introduction to openalexR","text":"Example: want download records regarding journals published 100,000 works:","code":"big_journals <- list(   entity = \"venues\",   works_count = \">100000\",   verbose = TRUE )  do.call(oa_fetch, c(big_journals, list(count_only = TRUE))) ## [1] \"https://api.openalex.org/venues?filter=works_count%3A%3E100000\" ## Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 ##               count db_response_time_ms                page            per_page  ##                  52                   2                   1                   1 dplyr::glimpse(do.call(oa_fetch, big_journals)) ## [1] \"https://api.openalex.org/venues?filter=works_count%3A%3E100000\" ## Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 ## About to get a total of 1 pages of results with a total of 52 records. ## Rows: 52 ## Columns: 14 ## $ id            <chr> \"https://openalex.org/V2751751161\", \"https://openalex.or… ## $ name          <chr> \"Social Science Research Network\", \"Research Papers in E… ## $ publisher     <chr> NA, NA, \"Wiley\", NA, \"Elsevier\", \"BMJ\", \"Springer Nature… ## $ issn          <list> NA, NA, <\"1431-5890\", \"0931-7597\", \"1522-2667\">, <\"1611… ## $ issn_l        <list> NA, NA, \"0931-7597\", \"0302-9743\", \"0140-6736\", \"0959-81… ## $ is_oa         <lgl> NA, NA, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… ## $ is_in_doaj    <lgl> NA, NA, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… ## $ ids           <list> [<data.frame[2 x 2]>], [<data.frame[2 x 2]>], [<data.fr… ## $ homepage      <chr> \"http://www.ssrn.com/\", \"http://www.repec.org/\", NA, \"ht… ## $ works_count   <int> 761035, 753000, 740884, 514104, 467901, 448821, 434120, … ## $ TC            <int> 2660308, 2357296, 232616, 5414236, 7029076, 3412329, 191… ## $ TCperYear     <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3]>], [<data.… ## $ concept       <list> [<data.frame[20 x 5]>], [<data.frame[21 x 5]>], [<data.… ## $ works_api_url <chr> \"https://api.openalex.org/works?filter=host_venue.id:V27…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"concepts-think-theme-keywords","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Concepts (think theme, keywords)","title":"A Brief Introduction to openalexR","text":"Example: want download records concepts concern least one million works:","code":"popular_concepts <- list(   entity = \"concepts\",   works_count = \">1000000\",   verbose = TRUE )  do.call(oa_fetch, c(popular_concepts, list(count_only = TRUE))) ## [1] \"https://api.openalex.org/concepts?filter=works_count%3A%3E1000000\" ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ##               count db_response_time_ms                page            per_page  ##                 147                   0                   1                   1 dplyr::glimpse(do.call(oa_fetch, popular_concepts)) ## [1] \"https://api.openalex.org/concepts?filter=works_count%3A%3E1000000\" ## Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 ## About to get a total of 1 pages of results with a total of 147 records. ## Rows: 147 ## Columns: 16 ## $ id                        <chr> \"https://openalex.org/C41008148\", \"https://o… ## $ name                      <chr> \"Computer science\", \"Medicine\", \"Chemistry\",… ## $ name_international        <list> [<data.frame[1 x 185]>], [<data.frame[1 x 1… ## $ description               <chr> \"theoretical study of the formal foundation … ## $ description_international <list> [<data.frame[1 x 40]>], [<data.frame[1 x 44… ## $ wikidata                  <chr> \"https://www.wikidata.org/wiki/Q21198\", \"htt… ## $ level                     <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0,… ## $ ids                       <list> [<data.frame[5 x 2]>], [<data.frame[5 x 2]>… ## $ image                     <chr> \"https://upload.wikimedia.org/wikipedia/comm… ## $ thumbnail                 <chr> \"https://upload.wikimedia.org/wikipedia/comm… ## $ ancestors                 <list> NA, NA, NA, NA, NA, NA, NA, [<data.frame[2 … ## $ rel_concepts              <list> [<data.frame[93 x 5]>], [<data.frame[51 x 5… ## $ works_count               <int> 40713384, 37107038, 20861958, 17614856, 1708… ## $ TC                        <int> 214175431, 362032374, 320781336, 157562941, … ## $ TCperYear                 <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3… ## $ works_api_url             <chr> \"https://api.openalex.org/works?filter=conce…"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"other-examples","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Other examples","title":"A Brief Introduction to openalexR","text":"Get works citing particular work can download publications citing another publication using filter attribute cites. example, want download publications citing article Aria Cuccurullo (2017), just set argument filter cites = \"W2755950973\" “W2755950973” OA id article Aria Cuccurullo. query return collection 1511 publications. Let’s download convert data frame:","code":"aria_count <- oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE ) ## [1] \"https://api.openalex.org/works?filter=cites%3AW2755950973\" ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 aria_count ##               count db_response_time_ms                page            per_page  ##                1511                  27                   1                   1 oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE ) %>%    dplyr::glimpse() ## [1] \"https://api.openalex.org/works?filter=cites%3AW2755950973\" ## Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 ##  Named int [1:4] 1511 32 1 1 ##  - attr(*, \"names\")= chr [1:4] \"count\" \"db_response_time_ms\" \"page\" \"per_page\""},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"convert-an-openalex-data-frame-to-a-bibliometrix-object","dir":"Articles","previous_headings":"An R-package to gather bibliographic data from OpenAlex.","what":"Convert an OpenAlex data frame to a bibliometrix object","title":"A Brief Introduction to openalexR","text":"bibliometrix R-package (https://www.bibliometrix.org) provides set tools quantitative research bibliometrics scientometrics. Today represents one used science mapping software world. recent survey bibliometric analysis tools, Moral-Muñoz et al. (2020) wrote: “moment, maybe Bibliometrix Shiny platform contain extensive set techniques implemented, together easiness interface, great software practitioners”. function oa2bibliometrix converts bibliographic data frame works bibliometrix object. object can used input collection science mapping workflow.","code":"bib_ls <- list(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2022-01-01\",   to_publication_date = \"2022-03-31\" )  do.call(oa_fetch, c(bib_ls, list(count_only = TRUE))) ##               count db_response_time_ms                page            per_page  ##                 216                  10                   1                   1 do.call(oa_fetch, bib_ls) %>%    oa2bibliometrix() %>%    dplyr::glimpse() ## Rows: 216 ## Columns: 37 ## $ AU            <chr> \"ZHIQUAN LIU;CHRISTOPHER R. MALINOWSKI;MARIA S. SEPÚLVED… ## $ RP            <chr> \"DEPARTMENT OF FORESTRY AND NATURAL RESOURCES, PURDUE UN… ## $ C1            <chr> \"DEPARTMENT OF FORESTRY AND NATURAL RESOURCES, PURDUE UN… ## $ AU_UN         <chr> \"PURDUE UNIVERSITY WEST LAFAYETTE;PURDUE UNIVERSITY WEST… ## $ AU_CO         <chr> \"USA;USA;USA\", \"ITALY;ITALY;ITALY;MALAYSIA\", \"NA;SOUTH A… ## $ ID            <chr> \"ORGANISM;DAPHNIA;NANOTOXICOLOGY;DAPHNIA MAGNA;ECOTOXICI… ## $ id_url        <chr> \"https://openalex.org/W3212020496\", \"https://openalex.or… ## $ TI            <chr> \"EMERGING TRENDS IN NANOPARTICLE TOXICITY AND THE SIGNIF… ## $ author        <list> [<data.frame[3 x 10]>], [<data.frame[4 x 10]>], [<data.… ## $ AB            <chr> \"NANOPARTICLE PRODUCTION IS ON THE RISE DUE TO ITS MANY … ## $ pubdata       <chr> \"2022-03-01\", \"2022-01-10\", \"2022-02-22\", \"2022-01-01\", … ## $ SO            <chr> \"CHEMOSPHERE\", \"BRITISH FOOD JOURNAL\", \"INTERNATIONAL JO… ## $ SO_ID         <chr> \"https://openalex.org/V203465130\", \"https://openalex.org… ## $ PU            <chr> \"Elsevier\", \"Emerald (MCB UP)\", \"MDPI AG\", \"Elsevier\", \"… ## $ IS            <list> <\"0045-6535\", \"1879-1298\">, <\"0007-070X\", \"1758-4108\">,… ## $ URL           <chr> \"https://doi.org/10.1016/j.chemosphere.2021.132941\", \"ht… ## $ first_page    <chr> \"132941\", \"2239\", \"2508\", \"118420\", NA, \"1129\", NA, \"667… ## $ last_page     <chr> \"132941\", \"2261\", \"2508\", \"118420\", NA, \"1155\", NA, \"705… ## $ volume        <chr> \"291\", \"124\", \"19\", \"292\", NA, \"39\", NA, \"29\", \"153\", \"1… ## $ issue         <chr> NA, \"7\", \"5\", NA, NA, \"6\", NA, \"2\", NA, NA, NA, NA, NA, … ## $ OA            <lgl> FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, TRUE, TRUE, TRU… ## $ TC            <int> 6, 6, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3,… ## $ TCperYear     <list> [<data.frame[1 x 2]>], [<data.frame[1 x 2]>], [<data.fr… ## $ PY            <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 20… ## $ cited_by_url  <chr> \"https://api.openalex.org/works?filter=cites:W3212020496… ## $ ids           <list> [[<data.frame[4 x 2]>]], [[<data.frame[2 x 2]>]], [[<da… ## $ DI            <chr> \"https://doi.org/10.1016/j.chemosphere.2021.132941\", \"ht… ## $ DT            <chr> \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICLE\",… ## $ CR            <chr> \"https://openalex.org/W321855510;https://openalex.org/W7… ## $ related_works <list> <\"https://openalex.org/W2040538662\", \"https://openalex.… ## $ concept       <list> [<data.frame[13 x 5]>], [<data.frame[8 x 5]>], [<data.f… ## $ id_oa         <chr> \"W3212020496\", \"W4205146162\", \"W4214772295\", \"W320957509… ## $ DB            <chr> \"openalex\", \"openalex\", \"openalex\", \"openalex\", \"openale… ## $ JI            <chr> \"V203465130\", \"V99313352\", \"V15239247\", \"V201530359\", \"V… ## $ J9            <chr> \"V203465130\", \"V99313352\", \"V15239247\", \"V201530359\", \"V… ## $ SR_FULL       <chr> \"ZHIQUAN LIU, 2022, V203465130\", \"PAOLO BIANCONE, 2022, … ## $ SR            <chr> \"ZHIQUAN LIU, 2022, V203465130\", \"PAOLO BIANCONE, 2022, …"},{"path":"https://massimoaria.github.io/openalexR/articles/A_Brief_Introduction_to_openalexR.html","id":"about-openalex","dir":"Articles","previous_headings":"","what":"About OpenAlex","title":"A Brief Introduction to openalexR","text":"OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Venues journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://massimoaria.github.io/openalexR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Massimo Aria. Author, maintainer, copyright holder. Trang Le. Contributor.","code":""},{"path":"https://massimoaria.github.io/openalexR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aria M (2022). openalexR: Getting Bibliographic Records 'OpenAlex' Database Using 'DSL' API. https://github.com/massimoaria/openalexR, https://massimoaria.github.io/openalexR/.","code":"@Manual{,   title = {openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API},   author = {Massimo Aria},   year = {2022},   note = {https://github.com/massimoaria/openalexR, https://massimoaria.github.io/openalexR/}, }"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"openalexr-","dir":"","previous_headings":"","what":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"openalexR helps interface OpenAlex API retrieve bibliographic infomation publications, authors, venues, institutions concepts 4 main functions: oa_query(): generates valid query, written following OpenAlex API syntax, set arguments provided user. oa_request(): downloads collection entities matching query created oa_query() manually written user, returns JSON object list format. oa2df(): converts JSON object classical bibliographic tibble/data frame. oa_fetch(): composes three functions user can execute everything one step, .e., oa_query |> oa_request |> oa2df","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"can install developer version openalexR GitHub : can install released version openalexR CRAN :","code":"install.packages(\"remotes\") remotes::install_github(\"massimoaria/openalexR\") install.packages(\"openalexR\")"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"package-loading","dir":"","previous_headings":"","what":"Package loading","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"","code":"library(openalexR) library(dplyr)"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"works-think-papers-publications","dir":"","previous_headings":"","what":"Works (think papers, publications)","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"paper: associated OpenAlex-id W2755950973. know paper’s OpenAlex ID, need passing identifier = <openalex id> argument oa_fetch(): oa_fetch() composition functions: oa_query |> oa_request |> oa2df. results, oa_query() returns query string including OpenAlex endpoint API server address (default). oa_request() downloads bibliographic records matching query. Finally, oa2df() converts final result list tibble. final result complicated tibble, can use show_works() display simplified version:","code":"Aria, M., & Cuccurullo, C. (2017). bibliometrix:  An R-tool for comprehensive science mapping analysis.  Journal of informetrics, 11(4), 959-975. paper_id <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   verbose = TRUE ) #> [1] \"https://api.openalex.org/works/W2755950973\" #> Requesting url: https://api.openalex.org/works/W2755950973 #> Warning: replacing previous import 'lifecycle::last_warnings' by #> 'rlang::last_warnings' when loading 'hms' dplyr::glimpse(paper_id) #> Rows: 1 #> Columns: 25 #> $ id            <chr> \"https://openalex.org/W2755950973\" #> $ TI            <chr> \"bibliometrix: An R-tool for comprehensive science mappi… #> $ author        <list> [<data.frame[2 x 10]>] #> $ AB            <chr> \"Abstract The use of bibliometrics is gradually extendin… #> $ pubdata       <chr> \"2017-11-01\" #> $ SO            <chr> \"Journal of Informetrics\" #> $ SO_ID         <chr> \"https://openalex.org/V205292342\" #> $ PU            <chr> \"Elsevier\" #> $ IS            <list> <\"1875-5879\", \"1751-1577\"> #> $ URL           <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" #> $ first_page    <chr> \"959\" #> $ last_page     <chr> \"975\" #> $ volume        <chr> \"11\" #> $ issue         <chr> \"4\" #> $ OA            <lgl> FALSE #> $ TC            <int> 1456 #> $ TCperYear     <list> [<data.frame[5 x 2]>] #> $ PY            <int> 2017 #> $ cited_by_url  <chr> \"https://api.openalex.org/works?filter=cites:W2755950973\" #> $ ids           <list> [[<data.frame[3 x 2]>]] #> $ DI            <chr> \"https://doi.org/10.1016/j.joi.2017.08.007\" #> $ DT            <chr> \"journal-article\" #> $ CR            <list> <\"https://openalex.org/W189804332\", \"https://openalex.o… #> $ related_works <list> <\"https://openalex.org/W150292108\", \"https://openalex.or… #> $ concept       <list> [<data.frame[8 x 5]>] paper_id %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"external-id-formats","dir":"","previous_headings":"Works (think papers, publications)","what":"External id formats","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"OpenAlex endpoint accepts OpenAlex IDs external IDs (e.g., DOI, ISSN) several formats, including Digital Object Identifier (DOI) Persistent Identifiers (PIDs).","code":"oa_fetch(   # identifier = \"https://doi.org/10.1016/j.joi.2017.08.007\", # would also work (PIDs)   identifier = \"doi:10.1016/j.joi.2017.08.007\",   entity = \"works\" ) %>%    show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"more-than-one-publicationsauthors","dir":"","previous_headings":"Works (think papers, publications)","what":"More than one publications/authors","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"https://api.openalex.org/authors/https://orcid.org/ know OpenAlex IDs entities, can also feed identifier argument. However, know external identifies, say, DOIs, need use doi filter (either canonical form https://doi.org/ without work):","code":"oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   # identifier = c(\"https://doi.org/10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1016/j.joi.2017.08.007\"), # TODO   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() #> [1] \"https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973\" #> Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 #> About to get a total of 1 pages of results with a total of 2 records. oa_fetch(   # identifier = c(\"W2741809807\", \"W2755950973\"),   doi = c(\"10.1016/j.joi.2017.08.007\", \"https://doi.org/10.1093/bioinformatics/btab727\"),   entity = \"works\",   verbose = TRUE ) %>%    show_works() %>%   knitr::kable() #> [1] \"https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727\" #> Requesting url: https://api.openalex.org/works?filter=doi%3A10.1016%2Fj.joi.2017.08.007%7Chttps%3A%2F%2Fdoi.org%2F10.1093%2Fbioinformatics%2Fbtab727 #> About to get a total of 1 pages of results with a total of 2 records."},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"filters","dir":"","previous_headings":"Works (think papers, publications)","what":"Filters","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"cases, interested downloading collection items meet one inclusion/exclusion criteria (filters). Supported attributes endpoints listed . Example: want download works cited 50 times, published 2020 2021, include strings “bibliometric analysis” “science mapping” title. Maybe also want results sorted total citations descending order. Setting argument count_only = TRUE, function oa_request() returns number items matching query without downloading collection. can now download records transform tibble/data frame setting count_only = FALSE (also default value): Read see can shorten two function calls.","code":"oa_fetch(   identifier = NULL,   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   sort = \"cited_by_count:desc\",   endpoint = \"https://api.openalex.org/\",   count_only = TRUE,   verbose = TRUE ) #> [1] \"https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc\" #> Requesting url: https://api.openalex.org/works?filter=title.search%3Abibliometric%20analysis%7Cscience%20mapping%2Ccited_by_count%3A%3E50%2Cfrom_publication_date%3A2020-01-01%2Cto_publication_date%3A2021-12-31&sort=cited_by_count%3Adesc #>               count db_response_time_ms                page            per_page  #>                  23                  19                   1                   1 oa_fetch(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   cited_by_count = \">50\",    from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   sort = \"cited_by_count:desc\",   count_only = FALSE ) %>%   show_works() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Similarly work, can use identifier pass authors’ OpenAlex ID. Example: want information authors IDs A923435168 A2208157607. Example: want download authors’ records scholars work University Naples Federico II (OpenAlex ID: I71267560) published 499 works. Let’s first check many records match query, set count_only = FALSE download entire collection. can first defining list arguments, adding count_only (default FALSE) list: can also filter filters display_name, has_orcid, orcid:","code":"oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE ) %>%   show_authors() %>%   knitr::kable() #> [1] \"https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607\" #> Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 #> About to get a total of 1 pages of results with a total of 2 records. my_arguments <- list(   entity = \"authors\",   last_known_institution.id = \"I71267560\",   works_count = \">499\"   )  do.call(oa_fetch, c(my_arguments, list(count_only = TRUE))) #>               count db_response_time_ms                page            per_page  #>                  22                  22                   1                   1 do.call(oa_fetch, my_arguments) %>%    show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   display_name = \"Massimo Aria\",   has_orcid = \"true\" ) %>%   show_authors() %>%   knitr::kable() oa_fetch(   entity = \"authors\",   orcid = \"0000-0002-8517-9411\" ) %>%   show_authors() %>%   knitr::kable()"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"institutions","dir":"","previous_headings":"","what":"Institutions","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Example: want download records regarding Italian institutions (country_code:) classified educational (type:education). , check many records match query download collection:","code":"italian_insts <- list(   entity = \"institutions\",   country_code = \"it\",   type = \"education\",   verbose = TRUE )  do.call(oa_fetch, c(italian_insts, list(count_only = TRUE))) #> [1] \"https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation\" #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation #>               count db_response_time_ms                page            per_page  #>                 231                   1                   1                   1 dplyr::glimpse(do.call(oa_fetch, italian_insts)) #> [1] \"https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation\" #> Requesting url: https://api.openalex.org/institutions?filter=country_code%3Ait%2Ctype%3Aeducation #> About to get a total of 2 pages of results with a total of 231 records. #> Rows: 231 #> Columns: 19 #> $ id                 <chr> \"https://openalex.org/I861853513\", \"https://openale… #> $ name               <chr> \"Sapienza University of Rome\", \"University of Bolog… #> $ name_alternatives  <list> \"Università degli Studi di Roma \\\"La Sapienza\\\"\", … #> $ name_acronyms      <list> NA, \"UNIBO\", \"UNIPD\", \"UNIMI\", NA, NA, \"UNITO\", \"U… #> $ name_international <list> [<data.frame[1 x 85]>], [<data.frame[1 x 103]>], [… #> $ ror                <chr> \"https://ror.org/02be6w209\", \"https://ror.org/01111… #> $ ids                <list> [<tbl_df[6 x 2]>], [<tbl_df[6 x 2]>], [<tbl_df[6 x… #> $ country            <chr> \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT\", \"IT… #> $ geo                <list> [<data.frame[1 x 7]>], [<data.frame[1 x 7]>], [<da… #> $ type               <chr> \"education\", \"education\", \"education\", \"education\",… #> $ homepage           <chr> \"http://www.uniroma1.it/\", \"http://www.unibo.it/en/… #> $ image              <chr> \"https://upload.wikimedia.org/wikipedia/en/4/45/Sap… #> $ thumbnail          <chr> \"https://upload.wikimedia.org/wikipedia/en/thumb/4/… #> $ associated_inst    <list> [<data.frame[1 x 24]>], [<data.frame[1 x 12]>], [<… #> $ works_count        <int> 163734, 130504, 129044, 127634, 91431, 86804, 85397… #> $ TC                 <int> 10604126, 9662346, 9535357, 9249788, 5999184, 56226… #> $ TCperYear          <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3]>], [<… #> $ concept            <list> [<data.frame[14 x 5]>], [<data.frame[15 x 5]>], [<… #> $ works_api_url      <chr> \"https://api.openalex.org/works?filter=institutions…"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"venues-think-journals","dir":"","previous_headings":"","what":"Venues (think journals)","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Example: want download records regarding journals published 100,000 works:","code":"big_journals <- list(   entity = \"venues\",   works_count = \">100000\",   verbose = TRUE )  do.call(oa_fetch, c(big_journals, list(count_only = TRUE))) #> [1] \"https://api.openalex.org/venues?filter=works_count%3A%3E100000\" #> Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 #>               count db_response_time_ms                page            per_page  #>                  52                   2                   1                   1 dplyr::glimpse(do.call(oa_fetch, big_journals)) #> [1] \"https://api.openalex.org/venues?filter=works_count%3A%3E100000\" #> Requesting url: https://api.openalex.org/venues?filter=works_count%3A%3E100000 #> About to get a total of 1 pages of results with a total of 52 records. #> Rows: 52 #> Columns: 14 #> $ id            <chr> \"https://openalex.org/V2751751161\", \"https://openalex.or… #> $ name          <chr> \"Social Science Research Network\", \"Research Papers in E… #> $ publisher     <chr> NA, NA, \"Wiley\", NA, \"Elsevier\", \"BMJ\", \"Springer Nature… #> $ issn          <list> NA, NA, <\"1431-5890\", \"0931-7597\", \"1522-2667\">, <\"1611… #> $ issn_l        <list> NA, NA, \"0931-7597\", \"0302-9743\", \"0140-6736\", \"0959-81… #> $ is_oa         <lgl> NA, NA, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… #> $ is_in_doaj    <lgl> NA, NA, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,… #> $ ids           <list> [<data.frame[2 x 2]>], [<data.frame[2 x 2]>], [<data.fr… #> $ homepage      <chr> \"http://www.ssrn.com/\", \"http://www.repec.org/\", NA, \"ht… #> $ works_count   <int> 761305, 753036, 740934, 514023, 467744, 448839, 434063, … #> $ TC            <int> 2664226, 2360376, 233707, 5413674, 7062712, 3423228, 191… #> $ TCperYear     <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3]>], [<data.… #> $ concept       <list> [<data.frame[20 x 5]>], [<data.frame[21 x 5]>], [<data.… #> $ works_api_url <chr> \"https://api.openalex.org/works?filter=host_venue.id:V27…"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"concepts-think-theme-keywords","dir":"","previous_headings":"","what":"Concepts (think theme, keywords)","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Example: want download records concepts concern least one million works:","code":"popular_concepts <- list(   entity = \"concepts\",   works_count = \">1000000\",   verbose = TRUE )  do.call(oa_fetch, c(popular_concepts, list(count_only = TRUE))) #> [1] \"https://api.openalex.org/concepts?filter=works_count%3A%3E1000000\" #> Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 #>               count db_response_time_ms                page            per_page  #>                 146                   3                   1                   1 dplyr::glimpse(do.call(oa_fetch, popular_concepts)) #> [1] \"https://api.openalex.org/concepts?filter=works_count%3A%3E1000000\" #> Requesting url: https://api.openalex.org/concepts?filter=works_count%3A%3E1000000 #> About to get a total of 1 pages of results with a total of 146 records. #> Rows: 146 #> Columns: 16 #> $ id                        <chr> \"https://openalex.org/C41008148\", \"https://o… #> $ name                      <chr> \"Computer science\", \"Medicine\", \"Chemistry\",… #> $ name_international        <list> [<data.frame[1 x 185]>], [<data.frame[1 x 1… #> $ description               <chr> \"theoretical study of the formal foundation … #> $ description_international <list> [<data.frame[1 x 40]>], [<data.frame[1 x 44… #> $ wikidata                  <chr> \"https://www.wikidata.org/wiki/Q21198\", \"htt… #> $ level                     <int> 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0,… #> $ ids                       <list> [<data.frame[5 x 2]>], [<data.frame[5 x 2]>… #> $ image                     <chr> \"https://upload.wikimedia.org/wikipedia/comm… #> $ thumbnail                 <chr> \"https://upload.wikimedia.org/wikipedia/comm… #> $ ancestors                 <list> NA, NA, NA, NA, NA, NA, NA, [<data.frame[2 … #> $ rel_concepts              <list> [<data.frame[93 x 5]>], [<data.frame[51 x 5… #> $ works_count               <int> 40513549, 36892224, 20875029, 17567558, 1705… #> $ TC                        <int> 214363426, 366806828, 324514640, 158829615, … #> $ TCperYear                 <list> [<data.frame[11 x 3]>], [<data.frame[11 x 3… #> $ works_api_url             <chr> \"https://api.openalex.org/works?filter=conce…"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"other-examples","dir":"","previous_headings":"","what":"Other examples","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Get works citing particular work can download publications citing another publication using filter attribute cites. example, want download publications citing article Aria Cuccurullo (2017), just set argument filter cites = \"W2755950973\" “W2755950973” OA id article Aria Cuccurullo. query return collection 1476 publications. Let’s download convert data frame:","code":"aria_count <- oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE )  #> [1] \"https://api.openalex.org/works?filter=cites%3AW2755950973\" #> Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 aria_count #>               count db_response_time_ms                page            per_page  #>                1476                  37                   1                   1 oa_fetch(   entity = \"works\",   cites = \"W2755950973\",   count_only = TRUE,   verbose = TRUE ) %>%    dplyr::glimpse() #> [1] \"https://api.openalex.org/works?filter=cites%3AW2755950973\" #> Requesting url: https://api.openalex.org/works?filter=cites%3AW2755950973 #>  Named int [1:4] 1476 25 1 1 #>  - attr(*, \"names\")= chr [1:4] \"count\" \"db_response_time_ms\" \"page\" \"per_page\""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"convert-an-openalex-data-frame-to-a-bibliometrix-object","dir":"","previous_headings":"","what":"Convert an OpenAlex data frame to a bibliometrix object","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"bibliometrix R-package (https://www.bibliometrix.org) provides set tools quantitative research bibliometrics scientometrics. Today represents one used science mapping software world. recent survey bibliometric analysis tools, Moral-Muñoz et al. (2020) wrote: “moment, maybe Bibliometrix Shiny platform contain extensive set techniques implemented, together easiness interface, great software practitioners”. function oa2bibliometrix converts bibliographic data frame works bibliometrix object. object can used input collection science mapping workflow.","code":"bib_ls <- list(   identifier = NULL,   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2022-01-01\",   to_publication_date = \"2022-03-31\" )  do.call(oa_fetch, c(bib_ls, list(count_only = TRUE))) #>               count db_response_time_ms                page            per_page  #>                 215                   8                   1                   1 do.call(oa_fetch, bib_ls) %>%    oa2bibliometrix() %>%    dplyr::glimpse() #> Rows: 215 #> Columns: 37 #> $ AU            <chr> \"CHENG WANG;TAO LV;RONGJIANG CAI;JIANFENG XU;LIYA WANG\",… #> $ RP            <chr> \"SCHOOL OF ECONOMICS AND MANAGEMENT, CHINA UNIVERSITY OF… #> $ C1            <chr> \"SCHOOL OF ECONOMICS AND MANAGEMENT, CHINA UNIVERSITY OF… #> $ AU_UN         <chr> \"CHINA UNIVERSITY OF MINING AND TECHNOLOGY;CHINA UNIVERS… #> $ AU_CO         <chr> \"CHINA;CHINA;CHINA;CHINA;NA\", \"ITALY;ITALY;ITALY\", \"SOUT… #> $ ID            <chr> \"SCOPUS;BIBLIOMETRICS;SUSTAINABILITY;HIERARCHY;AGENCY (P… #> $ id_url        <chr> \"https://openalex.org/W4220662981\", \"https://openalex.or… #> $ TI            <chr> \"BIBLIOMETRIC ANALYSIS OF MULTI-LEVEL PERSPECTIVE ON SUS… #> $ author        <list> [<data.frame[5 x 10]>], [<data.frame[3 x 10]>], [<data.… #> $ AB            <chr> \"THE MULTI-LEVEL PERSPECTIVE (MLP) IS A PROMINENT FRAMEW… #> $ pubdata       <chr> \"2022-03-31\", \"2022-03-31\", \"2022-03-31\", \"2022-03-29\", … #> $ SO            <chr> \"SUSTAINABILITY\", \"EUROPEAN JOURNAL OF INNOVATION MANAGE… #> $ SO_ID         <chr> \"https://openalex.org/V10134376\", \"https://openalex.org/… #> $ PU            <chr> \"MDPI AG\", \"Emerald (MCB UP)\", \"MDPI AG\", \"Emerald (MCB … #> $ IS            <list> \"2071-1050\", <\"1460-1060\", \"1758-7115\">, <\"1661-7827\", … #> $ URL           <chr> \"https://doi.org/10.3390/su14074145\", \"https://doi.org/1… #> $ first_page    <chr> \"4145\", NA, \"4165\", NA, NA, \"1073\", \"1082\", NA, NA, NA, … #> $ last_page     <chr> \"4145\", NA, \"4165\", NA, NA, \"1073\", \"1082\", NA, NA, NA, … #> $ volume        <chr> \"14\", NA, \"19\", NA, \"9\", \"14\", \"14\", NA, NA, NA, \"14\", \"… #> $ issue         <chr> \"7\", NA, \"7\", NA, NA, \"7\", \"7\", NA, NA, NA, \"7\", \"1\", \"4… #> $ OA            <lgl> TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE… #> $ TC            <int> 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,… #> $ TCperYear     <list> [<data.frame[1 x 2]>], NA, NA, [<data.frame[1 x 2]>], N… #> $ PY            <int> 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 2022, 20… #> $ cited_by_url  <chr> \"https://api.openalex.org/works?filter=cites:W4220662981… #> $ ids           <list> [[<data.frame[2 x 2]>]], [[<data.frame[2 x 2]>]], [[<da… #> $ DI            <chr> \"https://doi.org/10.3390/su14074145\", \"https://doi.org/1… #> $ DT            <chr> \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICLE\", \"JOURNAL-ARTICLE\",… #> $ CR            <chr> \"https://openalex.org/W946529684;https://openalex.org/W1… #> $ related_works <list> <\"https://openalex.org/W1222457\", \"https://openalex.org… #> $ concept       <list> [<data.frame[12 x 5]>], [<data.frame[6 x 5]>], [<data.f… #> $ id_oa         <chr> \"W4220662981\", \"W4220731660\", \"W4220971062\", \"W422071230… #> $ DB            <chr> \"openalex\", \"openalex\", \"openalex\", \"openalex\", \"openale… #> $ JI            <chr> \"V10134376\", \"V90149737\", \"V15239247\", \"V20489460\", \"V25… #> $ J9            <chr> \"V10134376\", \"V90149737\", \"V15239247\", \"V20489460\", \"V25… #> $ SR_FULL       <chr> \"CHENG WANG, 2022, V10134376\", \"GIANLUCA ELIA, 2022, V90… #> $ SR            <chr> \"CHENG WANG, 2022, V10134376\", \"GIANLUCA ELIA, 2022, V90…"},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"about-openalex","dir":"","previous_headings":"","what":"About OpenAlex","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Image https://docs.openalex.org/ OpenAlex fully open catalog global research system. ’s named ancient Library Alexandria. OpenAlex dataset describes scholarly entities entities connected . five types entities: Works papers, books, datasets, etc; cite works Authors people create works Venues journals repositories host works Institutions universities orgs affiliated works (via authors) Concepts tag Works topic","code":""},{"path":"https://massimoaria.github.io/openalexR/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Getting Bibliographic Records from OpenAlex Database Using DSL\n    API","text":"Package hex made Midjourney inherits CC -NC 4.0 license.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"Data frame contains list countries alpha-2 aplha-3 codes.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/countrycode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Index of Countries and their alpha-2 and aplha-3 codes. — countrycode","text":"data frame 250 rows 3 variables: Country country names Alpha2 countries' alpha-2 codes Alpha3 countries' alpha-3 codes","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ bibliometrix data frame (https://bibliometrix.org/)","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"oa2bibliometrix(df)"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"df bibliographic collection works donwloaded OpenALex.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"data.frame class \"bibliometrix\".","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2bibliometrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from data frame to bibliometrix object — oa2bibliometrix","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   filter = \"cites:W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  M <- oa2bibliometrix(df) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection from list to data frame — oa2df","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"converts bibliographic collections gathered OpenAlex database https://openalex.org/ data frame. function converts collection records works, authors, institutions, venues concepts obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"oa2df(data, entity, count_only = FALSE, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"data list. data output function oa_request. entity character. indicates scholarly entity search. argument can equal entity = c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). default value entity = works\". count_only Logical. TRUE, function returns number item matching query. Default count_only=FALSE. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection from list to data frame — oa2df","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-04-31\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  oa2df(res, entity = \"works\")  }"},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"converts bibliographic collection authors' records gathered OpenAlex database https://openalex.org/ data frame. function converts list authors' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"","code":"oaAuthors2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaAuthors2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of authors' records from list format to data frame — oaAuthors2df","text":"","code":"if (FALSE) {  # Query to search information about all authors affiliated to the University of Naples Federico II # which have authored at least 100 publications:  # University of Naples Federico II is associated to the OpenAlex id I71267560.   query_author <- oa_query(   identifier = NULL,   entity = \"authors\",   filter = \"last_known_institution.id:I71267560,works_count:>99\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"authors\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"converts bibliographic collection concepts' records gathered OpenAlex database https://openalex.org/ data frame. function converts list concepts' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"","code":"oaConcepts2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaConcepts2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of concepts' records from list format to data frame — oaConcepts2df","text":"","code":"if (FALSE) {  # Query to search information about all Italian educational institutions   query_inst <- oa_query(   entity = \"institutions\",   filter = \"country_code:it,type:education\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"concepts\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"converts bibliographic collection institutions' records gathered OpenAlex database https://openalex.org/ data frame. function converts list institutions' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"","code":"oaInstitutions2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaInstitutions2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of institutions' records from list format to data frame — oaInstitutions2df","text":"","code":"if (FALSE) {  # Query to search information about all Italian educational institutions   query_inst <- oa_query(   entity = \"institutions\",   filter = \"country_code:it,type:education\" )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"institutions\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"converts bibliographic collection venues' records gathered OpenAlex database https://openalex.org/ data frame. function converts list venues' records obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"","code":"oaVenues2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaVenues2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of venues' records from list format to data frame — oaVenues2df","text":"","code":"if (FALSE) {  # Query to search information about the Journal of Informetrics (OA id:V205292342)   query_inst <- oa_query(   identifier = \"V205292342\",   entity = \"venues\", )  res <- oa_request(   query_url = query_inst,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"venues\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"converts bibliographic collection works gathered OpenAlex database https://openalex.org/ data frame. function converts list works obtained using oa_request data frame/tibble.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"","code":"oaWorks2df(data, verbose = TRUE)"},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"data list. data output function oa_request. verbose logical. TRUE, information querying process plotted screen. Default verbose=TRUE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"data.frame. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oaWorks2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert OpenAlex collection of works from list format to data frame — oaWorks2df","text":"","code":"if (FALSE) {  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query <- oa_query(   identifier = NULL,   entity = \"works\",   filter = \"cites:W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query,   count_only = FALSE,   verbose = FALSE )  df <- oa2df(res, entity = \"works\")  df }  # @export"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Available entities in the OpenAlex database — oa_entities","title":"Available entities in the OpenAlex database — oa_entities","text":"Available entities OpenAlex database","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Available entities in the OpenAlex database — oa_entities","text":"","code":"oa_entities()"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Available entities in the OpenAlex database — oa_entities","text":"Character vector 5 entity options.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"composition function perform query building, requesting, convert result tibble/data frame.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"","code":"oa_fetch(   ...,   identifier = NULL,   entity = if (is.null(identifier)) NULL else id_type(identifier[[1]]),   search = NULL,   sort = NULL,   group_by = NULL,   output = c(\"tibble\", \"list\", \"dataframe\"),   endpoint = \"https://api.openalex.org/\",   per_page = 200,   count_only = FALSE,   mailto = NULL,   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"... Filter arguments. Filters narrow list just entities meet particular condition--specifically, particular value particular attribute. Filters formatted attribute = value. complete list filter attributes entity can found example, `cited_by_count = \">100\"`, `title.search = c(\"bibliometric analysis\", \"science mapping\")`, `to_publication_date = \"2021-12-31\"`. https://docs.openalex.org/api/get-lists--entities#filter identifier Character. indicates item identifier. entity Character. indicates scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. filter using search, append .search end property filtering . sort Character. Property sort . example: \"display_name\" venues \"cited_by_count:desc\" works. See <https://docs.openalex.org/api/get-lists--entities/sort-entity-lists>. group_by Character. Property group . example: \"oa_status\" works. https://docs.openalex.org/api/get-groups--entities output Character. Type output, either list tibble/data.frame. endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\". per_page numeric. indicates many items download per page. per-page argument can assume number 1 200. Default per_page=200. count_only logical. TRUE, function returns number item matching query. Default count_only=FALSE. mailto character. get polite pool, arguments mailto give OpenAlex email can contact . verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"data.frame list. Result query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A composition function to perform query building, requesting,\nand convert the result to a tibble/data frame. — oa_fetch","text":"","code":"if (FALSE) {  paper_meta <- oa_fetch(   identifier = \"W2755950973\",   entity = \"works\",   endpoint = \"https://api.openalex.org/\",   count_only = TRUE,   verbose = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE,   count_only = TRUE )  oa_fetch(   entity = \"works\",   doi = c(     \"10.1371/journal.pone.0266781\",     \"10.1371/journal.pone.0267149\"   ),   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an OpenAlex query from a set of parameters — oa_query","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"generates valid query, written following OpenAlex API Language, set parameters.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"oa_query(   ...,   identifier = NULL,   entity = id_type(identifier[[1]]),   search = NULL,   sort = NULL,   group_by = NULL,   endpoint = \"https://api.openalex.org/\",   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"... Filter arguments. Filters narrow list just entities meet particular condition--specifically, particular value particular attribute. Filters formatted attribute = value. complete list filter attributes entity can found example, `cited_by_count = \">100\"`, `title.search = c(\"bibliometric analysis\", \"science mapping\")`, `to_publication_date = \"2021-12-31\"`. https://docs.openalex.org/api/get-lists--entities#filter identifier Character. indicates item identifier. entity Character. indicates scholarly entity search. argument can one c(\"works\", \"authors\", \"venues\", \"institutions\", \"concepts\"). provided, `entity` guessed `identifier`. search Character. Search just another kind filter, one five endpoints support. unlike filters, search require exact match. filter using search, append .search end property filtering . sort Character. Property sort . example: \"display_name\" venues \"cited_by_count:desc\" works. See <https://docs.openalex.org/api/get-lists--entities/sort-entity-lists>. group_by Character. Property group . example: \"oa_status\" works. https://docs.openalex.org/api/get-groups--entities endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\". verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"character containing query OpenAlex format. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_query.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate an OpenAlex query from a set of parameters — oa_query","text":"","code":"if (FALSE) {  query_auth <- oa_query(identifier = \"A923435168\", verbose = TRUE)  ### EXAMPLE 1: Full record about an entity.  # Query to obtain allinformation about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  query_work <- oa_query(   identifier = \"W2755950973\",   endpoint = \"https://api.openalex.org/\",   verbose = TRUE )   #  The author Massimo Aria is associated to the OpenAlex-id A923435168:  query_auth <- oa_query(identifier = \"A923435168\", verbose = TRUE)   ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query1 <- oa_query(   entity = \"works\",   cites = \"W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   verbose = TRUE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in the first half of 2021.  # Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   entity = \"works\",   title.search = c(\"bibliometric analysis\", \"science mapping\"),   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-06-30\",   sort = \"cited_by_count:desc\",   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Get bibliographic records from OpenAlex databases — oa_request","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"gets bibliographic records OpenAlex database https://openalex.org/. function oa_request queries OpenAlex database using query formulated function oa_query.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"","code":"oa_request(   query_url,   per_page = 200,   count_only = FALSE,   mailto = NULL,   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"query_url character. contains search query formulated using OpenAlex API language. query can automatically generated using function oa_query. per_page numeric. indicates many items download per page. per-page argument can assume number 1 200. Default per_page=200. count_only logical. TRUE, function returns number item matching query. Default count_only=FALSE. mailto character. get polite pool, arguments mailto give OpenAlex email can contact . verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"data.frame list. extensive information OpenAlex API, please visit: https://docs.openalex.org/api","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_request.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get bibliographic records from OpenAlex databases — oa_request","text":"","code":"if (FALSE) {  ### EXAMPLE 1: Full record about an entity.  # Query to obtain all information about a particular work/author/institution/etc.:  #  The following paper is associated to the OpenAlex-id W2755950973.  #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.   query_work <- oa_query(   identifier = \"W2755950973\",   entity = \"works\",   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query_work,   count_only = FALSE,   verbose = FALSE )  #  The author Massimo Aria is associated to the OpenAlex-id A923435168.   query_author <- oa_query(   identifier = \"A923435168\",   entity = \"authors\",   endpoint = \"https://api.openalex.org/\" )  res <- oa_request(   query_url = query_author,   count_only = FALSE,   verbose = FALSE )    ### EXAMPLE 2: all works citing a particular work.  # Query to search all works citing the article: #  Aria, M., & Cuccurullo, C. (2017). bibliometrix: #   An R-tool for comprehensive science mapping analysis. #   Journal of informetrics, 11(4), 959-975.  #  published in 2021. #  The paper is associated to the OpenAlex id W2755950973.  #  Results have to be sorted by relevance score in a descending order.  query2 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = \"cites:W2755950973\",   from_publication_date = \"2021-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res2 <- oa_request(   query_url = query2,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 3: All works matching a string in their title  # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Results have to be sorted by relevance score in a descending order.   query3 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = 'title.search:\"bibliometric analysis\"|\"science mapping\"',   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res3 <- oa_request(   query_url = query3,   count_only = FALSE,   verbose = FALSE )  ### EXAMPLE 4: How to check how many works match a query # Query to search all works containing the exact string # \"bibliometric analysis\" OR \"science mapping\" in the title, published in 2020 or 2021.  # Query only to know how many works could be retrieved (count_only=TRUE)  query4 <- oa_query(   identifier = NULL,   entity = \"works\",   filter = 'title.search:\"bibliometric analysis\"|\"science mapping\"',   from_publication_date = \"2020-01-01\",   to_publication_date = \"2021-12-31\",   search = NULL,   endpoint = \"https://api.openalex.org/\" )  res4 <- oa_request(   query_url = query4,   count_only = TRUE,   verbose = FALSE )  res4$count # number of items retrieved by our query }"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"function perform snowball search convert result tibble/data frame.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"","code":"oa_snowball(   identifier = NULL,   output = c(\"tibble\", \"dataframe\"),   mailto = NULL,   endpoint = \"https://api.openalex.org/\",   verbose = FALSE )"},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"identifier Character. indicates vector item identifiers. output tibble/data.frame. mailto character. get polite pool, arguments mailto give OpenAlex email can contact . endpoint character. indicates url OpenAlex Endpoint API server. default value endpoint = \"https://api.openalex.org/\". verbose logical. TRUE, information querying process plotted screen. Default verbose=FALSE.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"data.frame tibble. Result snowball search.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/oa_snowball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to perform a snowball search\nand convert the result to a tibble/data frame. — oa_snowball","text":"","code":"if (FALSE) {  snowball_docs <- oa_snowball(   identifier = c(\"W2741809807\", \"W2755950973\"),   endpoint = \"https://api.openalex.org/\",   verbose = TRUE ) }"},{"path":"https://massimoaria.github.io/openalexR/reference/openalexR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"set tools extract bibliographic content 'OpenAlex' database using API https://docs.openalex.org/api/.","code":""},{"path":[]},{"path":"https://massimoaria.github.io/openalexR/reference/openalexR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"openalexR: Getting Bibliographic Records from 'OpenAlex' Database Using 'DSL' API — openalexR-package","text":"Maintainer: Massimo Aria massimo.aria@gmail.com (ORCID) [copyright holder] contributors: Trang Le grixor@gmail.com (ORCID) [contributor]","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex authors result — show_authors","title":"Simplify the OpenAlex authors result — show_authors","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(x, simp_func = utils::head)"},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex authors result — show_authors","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex authors result — show_authors","text":"Simplified tibble display.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_authors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex authors result — show_authors","text":"","code":"show_authors(oa_fetch(   identifier = c(\"A923435168\", \"A2208157607\"),   verbose = TRUE )) #> [1] \"https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607\" #> Requesting url: https://api.openalex.org/authors?filter=openalex_id%3AA923435168%7CA2208157607 #> About to get a total of 1 pages of results with a total of 2 records. #> # A tibble: 2 × 7 #>   short_id    name         orcid               works_count    TC affil…¹ top_c…² #>   <chr>       <chr>        <chr>                     <int> <int> <chr>   <chr>   #> 1 A923435168  Massimo Aria 0000-0002-8517-9411         102  2952 Univer… Biolog… #> 2 A2208157607 Jason Priem  0000-0001-6187-6610          49  2182 Our Re… Comput… #> # … with abbreviated variable names ¹​affiliation_name, ²​top_concepts"},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplify the OpenAlex works result — show_works","title":"Simplify the OpenAlex works result — show_works","text":"function mostly package's internal use, export can try . However, expect likely write function simplify result however want.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(x, simp_func = utils::head)"},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplify the OpenAlex works result — show_works","text":"x Dataframe/tibble. Result OpenAlex query authors already converted dataframe/tibble. simp_func R function simplify result. Default `head`. want entire table, set `simp_fun = identity`.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplify the OpenAlex works result — show_works","text":"Simplified tibble display.","code":""},{"path":"https://massimoaria.github.io/openalexR/reference/show_works.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplify the OpenAlex works result — show_works","text":"","code":"show_works(oa_fetch(   identifier = c(\"W2741809807\", \"W2755950973\"),   verbose = TRUE )) #> [1] \"https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973\" #> Requesting url: https://api.openalex.org/works?filter=openalex_id%3AW2741809807%7CW2755950973 #> About to get a total of 1 pages of results with a total of 2 records. #> # A tibble: 2 × 8 #>   short_id    TI                       first…¹ last_…² SO    URL   OA    top_c…³ #>   <chr>       <chr>                    <chr>   <chr>   <chr> <chr> <lgl> <chr>   #> 1 W2755950973 bibliometrix: An R-tool… Massim… Corrad… Jour… http… FALSE Workfl… #> 2 W2741809807 The state of OA: a larg… Heathe… Stefan… PeerJ http… TRUE  Citati… #> # … with abbreviated variable names ¹​first_author, ²​last_author, ³​top_concepts"}]
